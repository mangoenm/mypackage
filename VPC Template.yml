Description:  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a default
  route on the public subnets. It deploys a pair of NAT gateways (one in each AZ),
  and default routes for them in the private subnets.

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: DE-Extract

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 192.168.0.0/16

    DataCenterPublicSubnetCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 192.168.10.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  DataCenterPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref DataCenterPublicSubnetCIDR 
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: DE-Extract Data Center Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: DE-Extract Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref InternetGateway

  DataCenterPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref DataCenterPublicSubnet 

  WindowsInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        VpcId:  !Ref VPC
        GroupName: DE-Extract-WindowsInstanceSG
        GroupDescription: The group permits RDP access to an instance deployed within the public subnet of the VPC.
        SecurityGroupIngress:
          - IpProtocol: tcp
            CidrIp: 0.0.0.0/0
            FromPort: 3389
            ToPort: 3389
      Tags:
        - Key: Name
          Value: DE-Extract-WindowsInstanceSG 

  FileServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        VpcId:  !Ref VPC
        GroupName: DE-Extract-FileServerSG
        GroupDescription: The group responsible for permitting ssh access to the data center's file server.
        SecurityGroupIngress:
          - IpProtocol: tcp
            CidrIp: 192.168.10.0/24
            FromPort: 22
            ToPort: 22
      Tags:
        - Key: Name
          Value: DE-Extract-FileServerSG

  FileServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
        VpcId:  !Ref VPC
        GroupName: DE-Extract-FileGatewaySG
        GroupDescription: The group controls the access to the file gateway instance configured later on in this challenge.
        SecurityGroupIngress:
          - IpProtocol: tcp
            CidrIp: 192.168.0.0/16
            FromPort: 1
            ToPort: 65534
      Tags:
        - Key: Name
          Value: DE-Extract-FileGatewaySG
